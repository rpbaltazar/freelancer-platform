apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "fluentd-cluster-logging.fullname" . }}
  labels:
    k8s-app: fluentd-cluster-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    helm.sh/chart: {{ include "fluentd-cluster-logging.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-cluster-logging
      kubernetes.io/cluster-service: "true"
      app.kubernetes.io/name: {{ include "fluentd-cluster-logging.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        k8s-app: fluentd-cluster-logging
        kubernetes.io/cluster-service: "true"
        app.kubernetes.io/name: {{ include "fluentd-cluster-logging.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      # This annotation ensures that fluentd does not get evicted if the node
      # supports critical pod annotation based priority scheme.
      # Note that this does not guarantee admission on the nodes (#40573).
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      dnsPolicy: Default
      serviceAccountName: {{ include "fluentd-cluster-logging.fullname" . }}
      containers:
      - name: fluentd-cluster-logging
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        # If fluentd consumes its own logs, the following situation may happen:
        # fluentd fails to send a chunk to the server => writes it to the log =>
        # tries to send this message to the server => fails to send a chunk and so on.
        # Writing to a file, which is not exported to the back-end prevents it.
        # It also allows to increase the fluentd verbosity by default.
        - name: FLUENTD_OPT
          value: --no-supervisor -o /var/log/fluentd.log
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        resources:
          {{- toYaml .Values.resources | trim | nindent 10 }}
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config-volume
          mountPath: /fluentd/etc/config.d
        {{- if eq .Values.logSink.type "gcp" }}
        - name: gcp-service-account
          mountPath: /etc/google/auth/application_default_credentials.json
          subPath: application_default_credentials.json
        {{- end }}
        # Liveness probe is aimed to help in situations where fluentd
        # silently hangs for no apparent reasons until manual restart.
        # The idea of this probe is that if fluentd is not queueing or
        # flushing chunks for 5 minutes, something is not right. If
        # you want to change the fluentd configuration, reducing amount of
        # logs fluentd collects, consider changing the threshold or turning
        # liveness probe off completely.
        livenessProbe:
          initialDelaySeconds: 600
          periodSeconds: 60
          exec:
            command:
            - '/bin/sh'
            - '-c'
            - >
              LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300};
              STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900};
              if [ ! -e /var/log/fluentd-buffers ];
              then
                exit 1;
              fi;
              LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r "s/Modify: (.*)/\1/"`;
              LAST_MODIFIED_TIMESTAMP=`date -d "$LAST_MODIFIED_DATE" +%s`;
              if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ];
              then
                rm -rf /var/log/fluentd-buffers;
                exit 1;
              fi;
              if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ];
              then
                exit 1;
              fi;
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | trim | nindent 8 }}
      {{- end }}
      tolerations:
      - key: "node.alpha.kubernetes.io/ismaster"
        effect: "NoSchedule"
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config-volume
        configMap:
          name: {{ include "fluentd-cluster-logging.fullname" . }}
      {{- if eq .Values.logSink.type "gcp" -}}
      - name: "gcp-service-account"
        secret:
          {{- if .Values.logSink.gcpServiceAccountSecret.enabled }}
          secretName: {{ .Values.logSink.gcpServiceAccountSecret.name | quote }}
          items:
            - key: {{ .Values.logSink.gcpServiceAccountSecret.key | quote }}
              path: application_default_credentials.json
          {{- else }}
          secretName: {{ include "fluentd-cluster-logging.fullname" . }}
          items:
            - key: application_default_credentials.json
              path: application_default_credentials.json
          {{- end }}
      {{- end }}
