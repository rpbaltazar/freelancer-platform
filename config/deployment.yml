# Configuration values defined here will be overridden by any values defined in environments/[ROS_ENV].yml
---
infra:
  config:
    namespace: freelancer
    type: kubernetes
    # type: instance

    provider: aws
    # provider: gcp
    # provider: azure

    # Multiple deployments can be configured by setting branch_deployments to 'yes'
    # When 'yes' deployments are made into the namespace taken from the branch name
    # branch_deployments: no
    # branch_deployments: yes

    # When branch_deployments is 'yes' the deployment's endpoint hostname is api-branch.subdomain.domain
    # Set api_branch to have a specific namespace (branch) mapped to api.subdomain.domain
    api_branch: master

    endpoints:
      api:
        scheme: https
        host: api
      sftp:
        host: sftp

core:
  # environment:
  #   bucket_name: when-aws-this-is-the-s3-bucket-name
  services:
    fluentd:
      environment:
        bucket_path: /fluentd
    # TODO: Duan: is this an infra or a core concern?
    # grafana:
    #   environment:
    #     key: value
    postgres:
    # prometheus:
    #   environment:
    #     key: value
    redis:
    sftp:
      environment:
        bucket_path: /sftp

platform:
  config:
    image:
      registry: freelancer
      static_gems:
        bundler: 2.0.1
        eventmachine: 1.2.7
        ffi: 1.10.0
        mini_portile2: 2.4.0
        msgpack: 1.2.10
        nio4r: 2.3.1
        nokogiri: 1.10.3
        pg: 1.1.4
        puma: 3.12.1
      build_args:
        rails_env: development
        bundle_string: --without production
        os_packages: ['libpq5', 'tree', 'curl', 'git', 'sudo', 'vim', 'less', 'tcpdump', 'net-tools', 'iputils-ping']

  environment:
    rails_database_host: postgres
    # database_host: postgres
    redis_url: redis://redis-master:6379
    # TODO: use the value of infra.provider to provision storage, e.g. S3 bucket
    # storage: platform # storage is provisioned at platform with a dir per service
    # storage: service # each service provisions its own storage
    platform:
      partition_name: changeme
      # NOTE: request+system logging should not care/be aware of the underlying storage
      request_logging:
        enabled: no
      system_logging:
        enabled: no
        # connection__host__port: 80

  # Define the basic services that will be running on the platform and their default environment
  services:
    account:
      enabled: no
      mount: yes
      profiles: ['server', 'worker']
      ros: yes
    billing:
      enabled: no
      mount: yes
      profiles: ['server', 'worker']
      ros: yes
    cognito:
      enabled: yes
      mount: yes
      profiles: ['server', 'worker']
      ros: yes
    comm:
      enabled: yes
      mount: yes
      profiles: ['server', 'worker']
      ros: yes
    iam:
      mount: yes
      profiles: ['server', 'worker']
      ros: yes
    storage:
      enabled: no
      mount: yes
      profiles: ['server', 'worker', 'sqs_worker']
      ros: yes
      # TODO: Perhaps storage just gets the S3 bucket from a platform or service env
      # requires localstack running s3 or and S3 bucket, SFTP container, Rails Storage service
      # if enabled then either the ALB or the SG needs to permit the SFTP port
      # If localstack include that in COMPIOSE_FILE in .env
      # If S3 then when calling ros infra:provision it writes a value to tfvars that has TF create the S3 bucket
